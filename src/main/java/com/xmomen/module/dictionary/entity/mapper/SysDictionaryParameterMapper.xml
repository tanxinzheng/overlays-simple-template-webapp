<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmomen.module.dictionary.entity.mapper.SysDictionaryParameterMapper" >
  <resultMap id="BaseResultMap" type="com.xmomen.module.dictionary.entity.SysDictionaryParameter" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="SYS_DICTIONARY_ID" property="sysDictionaryId" jdbcType="INTEGER" />
    <result column="SHOW_VALUE" property="showValue" jdbcType="VARCHAR" />
    <result column="REAL_VALUE" property="realValue" jdbcType="VARCHAR" />
    <result column="SORT_VALUE" property="sortValue" jdbcType="INTEGER" />
    <result column="AVAILABLE" property="available" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, SYS_DICTIONARY_ID, SHOW_VALUE, REAL_VALUE, SORT_VALUE, AVAILABLE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xmomen.module.dictionary.entity.SysDictionaryParameterExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_dictionary_parameter
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xmomen.module.dictionary.entity.SysDictionaryParameterExample" >
    delete from sys_dictionary_parameter
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.xmomen.module.dictionary.entity.SysDictionaryParameter" useGeneratedKeys="true" keyProperty="id" keyColumn="ID" >
    insert into sys_dictionary_parameter
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="sysDictionaryId != null" >
        SYS_DICTIONARY_ID,
      </if>
      <if test="showValue != null" >
        SHOW_VALUE,
      </if>
      <if test="realValue != null" >
        REAL_VALUE,
      </if>
      <if test="sortValue != null" >
        SORT_VALUE,
      </if>
      <if test="available != null" >
        AVAILABLE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sysDictionaryId != null" >
        #{sysDictionaryId,jdbcType=INTEGER},
      </if>
      <if test="showValue != null" >
        #{showValue,jdbcType=VARCHAR},
      </if>
      <if test="realValue != null" >
        #{realValue,jdbcType=VARCHAR},
      </if>
      <if test="sortValue != null" >
        #{sortValue,jdbcType=INTEGER},
      </if>
      <if test="available != null" >
        #{available,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xmomen.module.dictionary.entity.SysDictionaryParameterExample" resultType="java.lang.Integer" >
    select count(*) from sys_dictionary_parameter
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_dictionary_parameter
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sysDictionaryId != null" >
        SYS_DICTIONARY_ID = #{record.sysDictionaryId,jdbcType=INTEGER},
      </if>
      <if test="record.showValue != null" >
        SHOW_VALUE = #{record.showValue,jdbcType=VARCHAR},
      </if>
      <if test="record.realValue != null" >
        REAL_VALUE = #{record.realValue,jdbcType=VARCHAR},
      </if>
      <if test="record.sortValue != null" >
        SORT_VALUE = #{record.sortValue,jdbcType=INTEGER},
      </if>
      <if test="record.available != null" >
        AVAILABLE = #{record.available,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>