<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmomen.module.authorization.mapper.PermissionMapper" >

    <insert id="insertSelective" parameterType="com.xmomen.module.authorization.model.Permission" useGeneratedKeys="true" keyProperty="id" keyColumn="ID" >
        <selectKey resultType="java.lang.String" keyProperty="id" order="BEFORE" >
            SELECT replace(UUID(),'-','')
        </selectKey>
        insert into xmo_permission
        <trim prefix="(" suffix=")" suffixOverrides="," >
        ID,
                <if test="permissionCode != null" >
                    PERMISSION_CODE,
                </if>
                <if test="permissionName != null" >
                    PERMISSION_NAME,
                </if>
                <if test="description != null" >
                    DESCRIPTION,
                </if>
                <if test="active != null" >
                    ACTIVE,
                </if>
                <if test="createdUserId != null" >
                    CREATED_USER_ID,
                </if>
                <if test="createdTime != null" >
                    CREATED_TIME,
                </if>
                <if test="updatedUserId != null" >
                    UPDATED_USER_ID,
                </if>
                <if test="updatedTime != null" >
                    UPDATED_TIME,
                </if>
                <if test="dataVersion != null" >
                    DATA_VERSION,
                </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
        #{id, jdbcType=VARCHAR},
                <if test="permissionCode != null" >
                #{permissionCode, jdbcType=VARCHAR},
                </if>
                <if test="permissionName != null" >
                #{permissionName, jdbcType=VARCHAR},
                </if>
                <if test="description != null" >
                #{description, jdbcType=VARCHAR},
                </if>
                <if test="active != null" >
                #{active, jdbcType=CHAR},
                </if>
                <if test="createdUserId != null" >
                #{createdUserId, jdbcType=VARCHAR},
                </if>
                <if test="createdTime != null" >
                #{createdTime, jdbcType=TIMESTAMP},
                </if>
                <if test="updatedUserId != null" >
                #{updatedUserId, jdbcType=VARCHAR},
                </if>
                <if test="updatedTime != null" >
                #{updatedTime, jdbcType=TIMESTAMP},
                </if>
                <if test="dataVersion != null" >
                #{dataVersion, jdbcType=INT},
                </if>
        </trim>
    </insert>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from xmo_permission where ID = #{id}
    </delete>

    <delete id="deletesByPrimaryKey" parameterType="java.util.ArrayList" >
        delete from xmo_permission where ID IN
        <foreach collection="ids" item="item" separator="," open="(" close=")">
        #{item}
        </foreach>
    </delete>

    <update id="updateSelective" parameterType="com.xmomen.module.authorization.model.Permission" >
        update xmo_permission
        <set>
            <if test="id != null" >
            ID = #{id, jdbcType=VARCHAR},
            </if>
            <if test="permissionCode != null" >
            PERMISSION_CODE = #{permissionCode, jdbcType=VARCHAR},
            </if>
            <if test="permissionName != null" >
            PERMISSION_NAME = #{permissionName, jdbcType=VARCHAR},
            </if>
            <if test="description != null" >
            DESCRIPTION = #{description, jdbcType=VARCHAR},
            </if>
            <if test="active != null" >
            ACTIVE = #{active, jdbcType=CHAR},
            </if>
            <if test="createdUserId != null" >
            CREATED_USER_ID = #{createdUserId, jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null" >
            CREATED_TIME = #{createdTime, jdbcType=TIMESTAMP},
            </if>
            <if test="updatedUserId != null" >
            UPDATED_USER_ID = #{updatedUserId, jdbcType=VARCHAR},
            </if>
            <if test="updatedTime != null" >
            UPDATED_TIME = #{updatedTime, jdbcType=TIMESTAMP},
            </if>
            <if test="dataVersion != null" >
            DATA_VERSION = #{dataVersion, jdbcType=INT},
            </if>
        </set>
        WHERE ID = #{id}
    </update>

    <update id="updateSelectiveByQuery" parameterType="map" >
        update xmo_permission
        <set >
            <if test="record.id != null" >
            ID = #{id, jdbcType=VARCHAR},
            </if>
            <if test="record.permissionCode != null" >
            PERMISSION_CODE = #{permissionCode, jdbcType=VARCHAR},
            </if>
            <if test="record.permissionName != null" >
            PERMISSION_NAME = #{permissionName, jdbcType=VARCHAR},
            </if>
            <if test="record.description != null" >
            DESCRIPTION = #{description, jdbcType=VARCHAR},
            </if>
            <if test="record.active != null" >
            ACTIVE = #{active, jdbcType=CHAR},
            </if>
            <if test="record.createdUserId != null" >
            CREATED_USER_ID = #{createdUserId, jdbcType=VARCHAR},
            </if>
            <if test="record.createdTime != null" >
            CREATED_TIME = #{createdTime, jdbcType=TIMESTAMP},
            </if>
            <if test="record.updatedUserId != null" >
            UPDATED_USER_ID = #{updatedUserId, jdbcType=VARCHAR},
            </if>
            <if test="record.updatedTime != null" >
            UPDATED_TIME = #{updatedTime, jdbcType=TIMESTAMP},
            </if>
            <if test="record.dataVersion != null" >
            DATA_VERSION = #{dataVersion, jdbcType=INT},
            </if>
        </set>
        <if test="query != null" >
            <include refid="Update_By_Query_Where_Clause"/>
        </if>
    </update>

    <!--    查询消息    -->
    <select id="select"
            resultType="com.xmomen.module.authorization.model.Permission"
            parameterType="com.xmomen.module.authorization.model.PermissionQuery">
        SELECT * FROM xmo_permission
        <include refid="Update_By_Query_Where_Clause"/>
        ORDER BY ID
    </select>

    <select id="selectByPrimaryKey"
            resultType="com.xmomen.module.authorization.model.Permission"
            parameterType="java.lang.String">
        SELECT * FROM xmo_permission WHERE ID = #{id}
    </select>

    <select id="selectModelByPrimaryKey"
            resultType="com.xmomen.module.authorization.model.PermissionModel"
            parameterType="java.lang.String">
        SELECT * FROM xmo_permission WHERE ID = #{id}
    </select>

    <select id="selectModel"
            resultType="com.xmomen.module.authorization.model.PermissionModel"
            parameterType="com.xmomen.module.authorization.model.PermissionQuery">
        SELECT * FROM xmo_permission
        <include refid="Update_By_Query_Where_Clause"/>
        ORDER BY id
    </select>

    <sql id="Update_By_Query_Where_Clause">
        <where>
            <if test="keyword">
                AND ID LIKE CONCAT('%', #{keyword}, '%')
            </if>
            <if test="id">
                AND ID = #{id}
            </if>
            <if test="ids">
                AND ID IN
                <foreach collection="ids" item="item" separator="," open="(" close=")">
                #{item}
                </foreach>
            </if>
            <if test="excludeIds">
                AND ID NOT IN
                <foreach collection="excludeIds" item="item" separator="," open="(" close=")">
                #{item}
                </foreach>
            </if>
        </where>
    </sql>

    <insert id="insertByBatch" parameterType="java.util.List">
        insert into xmo_permission (ID, PERMISSION_CODE, PERMISSION_NAME, DESCRIPTION, ACTIVE, CREATED_TIME, CREATED_USER_ID, UPDATED_TIME, UPDATED_USER_ID)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id}, #{item.permissionCode}, #{item.permissionName}, #{item.description}, #{item.active}, sysdate(), #{item.createdUserId}, sysdate(), #{item.updatedUserId})
        </foreach>
    </insert>


</mapper>