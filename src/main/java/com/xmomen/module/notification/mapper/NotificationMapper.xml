<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmomen.module.notification.mapper.NotificationMapper" >

    <insert id="insertSelective" parameterType="com.xmomen.module.notification.model.Notification" useGeneratedKeys="true" keyProperty="id" keyColumn="ID" >
        <selectKey resultType="java.lang.String" keyProperty="id" order="BEFORE" >
            SELECT replace(UUID(),'-','')
        </selectKey>
        insert into xmo_notification
        <trim prefix="(" suffix=")" suffixOverrides="," >
        ID,
                <if test="templateId != null" >
                    TEMPLATE_ID,
                </if>
                <if test="title != null" >
                    TITLE,
                </if>
                <if test="body != null" >
                    BODY,
                </if>
                <if test="expireTime != null" >
                    EXPIRE_TIME,
                </if>
                <if test="notificationType != null" >
                    NOTIFICATION_TYPE,
                </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
        #{id, jdbcType=VARCHAR},
                <if test="templateId != null" >
                #{templateId, jdbcType=VARCHAR},
                </if>
                <if test="title != null" >
                #{title, jdbcType=VARCHAR},
                </if>
                <if test="body != null" >
                #{body, jdbcType=VARCHAR},
                </if>
                <if test="expireTime != null" >
                #{expireTime, jdbcType=TIMESTAMP},
                </if>
                <if test="notificationType != null" >
                #{notificationType, jdbcType=VARCHAR},
                </if>
        </trim>
    </insert>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from xmo_notification where ID = #{id}
    </delete>

    <delete id="deletesByPrimaryKey" parameterType="java.util.ArrayList" >
        delete from xmo_notification where ID IN
        <foreach collection="ids" item="item" separator="," open="(" close=")">
        #{item}
        </foreach>
    </delete>

    <update id="updateSelective" parameterType="com.xmomen.module.notification.model.Notification" >
        update xmo_notification
        <set>
            <if test="id != null" >
            ID = #{id, jdbcType=VARCHAR},
            </if>
            <if test="templateId != null" >
            TEMPLATE_ID = #{templateId, jdbcType=VARCHAR},
            </if>
            <if test="title != null" >
            TITLE = #{title, jdbcType=VARCHAR},
            </if>
            <if test="body != null" >
            BODY = #{body, jdbcType=VARCHAR},
            </if>
            <if test="expireTime != null" >
            EXPIRE_TIME = #{expireTime, jdbcType=TIMESTAMP},
            </if>
            <if test="notificationType != null" >
            NOTIFICATION_TYPE = #{notificationType, jdbcType=VARCHAR},
            </if>
        </set>
        WHERE ID = #{id}
    </update>

    <update id="updateSelectiveByQuery" parameterType="map" >
        update xmo_notification
        <set >
            <if test="record.id != null" >
            ID = #{id, jdbcType=VARCHAR},
            </if>
            <if test="record.templateId != null" >
            TEMPLATE_ID = #{templateId, jdbcType=VARCHAR},
            </if>
            <if test="record.title != null" >
            TITLE = #{title, jdbcType=VARCHAR},
            </if>
            <if test="record.body != null" >
            BODY = #{body, jdbcType=VARCHAR},
            </if>
            <if test="record.expireTime != null" >
            EXPIRE_TIME = #{expireTime, jdbcType=TIMESTAMP},
            </if>
            <if test="record.notificationType != null" >
            NOTIFICATION_TYPE = #{notificationType, jdbcType=VARCHAR},
            </if>
        </set>
        <if test="query != null" >
            <include refid="Update_By_Query_Where_Clause"/>
        </if>
    </update>

    <!--    查询消息    -->
    <select id="select"
            resultType="com.xmomen.module.notification.model.Notification"
            parameterType="com.xmomen.module.notification.model.NotificationQuery">
        SELECT * FROM xmo_notification
        <include refid="Update_By_Query_Where_Clause"/>
        ORDER BY ID
    </select>

    <select id="selectByPrimaryKey"
            resultType="com.xmomen.module.notification.model.Notification"
            parameterType="java.lang.String">
        SELECT * FROM xmo_notification WHERE ID = #{id}
    </select>

    <select id="selectModelByPrimaryKey"
            resultType="com.xmomen.module.notification.model.NotificationModel"
            parameterType="java.lang.String">
        SELECT * FROM xmo_notification WHERE ID = #{id}
    </select>

    <select id="selectModel"
            resultType="com.xmomen.module.notification.model.NotificationModel"
            parameterType="com.xmomen.module.notification.model.NotificationQuery">
        SELECT * FROM xmo_notification
        <include refid="Update_By_Query_Where_Clause"/>
        ORDER BY id
    </select>

    <sql id="Update_By_Query_Where_Clause">
        <where>
            <if test="keyword">
                AND ID LIKE CONCAT('%', #{keyword}, '%')
            </if>
            <if test="id">
                AND ID = #{id}
            </if>
            <if test="ids">
                AND ID IN
                <foreach collection="ids" item="item" separator="," open="(" close=")">
                #{item}
                </foreach>
            </if>
            <if test="excludeIds">
                AND ID NOT IN
                <foreach collection="excludeIds" item="item" separator="," open="(" close=")">
                #{item}
                </foreach>
            </if>
        </where>
    </sql>

    <select id="countNotificationState"
            parameterType="com.xmomen.module.notification.model.NotificationQuery"
            resultType="com.xmomen.module.notification.model.NotificationStateCount">
        SELECT
        r.data_state,
        COUNT(r.data_state) number
        FROM
        xmo_notification_receive r
        WHERE r.RECEIVER = #{userId}
        GROUP BY DATA_STATE
    </select>

</mapper>